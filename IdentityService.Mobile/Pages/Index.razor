@page "/"
@using IdentityService.Mobile.Core
@inject IJSRuntime JSRuntime
<h1>Fun Blazor Web Camera Application</h1>
<label> Status: @((status))</label>
<div>
    <canvas id="@options.CanvasID" 
            style="background-color:lightgray;"
            width="@options.Width"
            height="360">
    </canvas>
</div>
<div>
    <button @onclick="Start">Start</button>
</div>
<div>
    <video id="@options.VideoID"
           style="background-color:lightblue; visibility:hidden;"
           width="@options.Width">Video stream not available.
    </video>
</div>

@code{
    WebCamOptions options = new WebCamOptions() 
    { 
        CanvasID = "canvas",
        VideoID = "video"
    };
    
    public  string status { get; set; } = "Not Started";
    protected override void OnInitialized()
    {
        //
        
        
        options.Filter = 
            "contrast(1.4) sepia(0.2) blur(3px) saturate(200%) hue-rotate(200deg)";
        options.Width = 480;
    }
    public async Task Start()
    {
        PermissionStatus statusCam = await Permissions.CheckStatusAsync<Permissions.Camera>();
        status = statusCam.ToString();
        
        if (statusCam == PermissionStatus.Granted)
        {
            try
            {
                
                
                await JSRuntime.InvokeVoidAsync("WebCamFunctions.start", options);
                
            }
            catch (Exception ex)
            {
                status = ex.Message;
                try
                {
                    MediaPicker.CaptureVideoAsync();
                    
                    //navigator.mediaDevices.getUserMedia({video:true,audio:true})
                    // Request for camera permissions in Android
                    var result = await Permissions.RequestAsync<Permissions.Camera>();
                    await JSRuntime.InvokeVoidAsync("WebCamFunctions.start", options);
                    status = result.ToString();
    //PermisManager manager = (CameraManager)Android.App.Application.Context.GetSystemService(Context.CameraService);sions.Camera
                }
                catch (Exception ex2)
                {
                    status = ex2.Message;
                }
            }
   
        }
        
    }
}